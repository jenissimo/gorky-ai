import sys
import os
import logging
import json
import asyncio
import threading
import uvicorn
from pathlib import Path
from functools import partial
from typing import Optional, Dict, Any

from cognistruct import BaseAgent
from cognistruct.plugins.storage.versioned.plugin import VersionedStoragePlugin
from cognistruct.plugins.storage.project.plugin import ProjectStoragePlugin
from cognistruct.llm import LLMRouter
from cognistruct.utils import Config
from cognistruct.utils.prompts import prompt_manager
from cognistruct.utils.pipeline import StageChain
from stages.preferences import PreferencesStage
from stages.prompt_generation import PromptGenerationStage
from stages.scene_generation import SceneGenerationStage
from stages.book_assembly import BookAssemblyStage
from stages.update_title import UpdateProjectTitleStage
from commands import CommandHandler
from web.server import app

logger = logging.getLogger(__name__)

# –î–æ–±–∞–≤–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞
project_prompts = os.path.join(Path(__file__).parent, "prompts")
if os.path.exists(project_prompts):
    prompt_manager.add_prompt_dir(project_prompts)

# –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∞–≥–µ–Ω—Ç–∞
SYSTEM_PROMPT = """
–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä–∞–ª—å–Ω—ã–π –ø–∏—Å–∞—Ç–µ–ª—å.
""".strip()

def run_web_server():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    uvicorn.run(app, host="0.0.0.0", port=8000)

def create_agent(llm_service="deepseek"):
    """–°–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä BaseAgent"""
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è LLM
    llm_config = {
        "provider": llm_service,
        "model": "deepseek-chat",
        "api_key": Config.load().deepseek_api_key,
        "temperature": 0.7
    }
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º LLM
    llm = LLMRouter().create_instance(**llm_config)
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
    agent = BaseAgent(llm=llm, auto_load_plugins=False)
    
    # –°–æ–∑–¥–∞–µ–º –ø–ª–∞–≥–∏–Ω—ã
    storage = VersionedStoragePlugin()
    project = ProjectStoragePlugin()
    
    # –°–æ–∑–¥–∞–µ–º —Ü–µ–ø–æ—á–∫—É —ç—Ç–∞–ø–æ–≤
    pipeline = StageChain([
        # 1. –≠—Ç–∞–ø —Å–±–æ—Ä–∞ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π (–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π)
        PreferencesStage(),
        
        # 2. –≠—Ç–∞–ø –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Creative Brief
        PromptGenerationStage(
            prompt_name="creative_brief.jinja2",
            artifact_name="creative_brief",
            required_artifacts=["preferences"]
        ),
        
        # 3. –≠—Ç–∞–ø –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è
        PromptGenerationStage(
            prompt_name="title_generation.jinja2",
            artifact_name="title",
            required_artifacts=["creative_brief"]
        ),
        
        # 4. –≠—Ç–∞–ø –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
        UpdateProjectTitleStage(),
        
        # 5. –≠—Ç–∞–ø –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Story Outline
        PromptGenerationStage(
            prompt_name="story_outline.jinja2",
            artifact_name="story_outline",
            required_artifacts=["creative_brief", "title"]
        ),
        
        # 6. –≠—Ç–∞–ø –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Story Structure
        PromptGenerationStage(
            prompt_name="story_structure.jinja2",
            artifact_name="story_structure",
            required_artifacts=["story_outline", "creative_brief"]
        ),
        
        # 7. –≠—Ç–∞–ø –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Character Sheets
        PromptGenerationStage(
            prompt_name="character_sheet.jinja2",
            artifact_name="characters",
            required_artifacts=["story_outline", "story_structure"]
        ),
        
        # 8. –≠—Ç–∞–ø –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ü–µ–Ω
        SceneGenerationStage(iterations=2),
        
        # 9. –≠—Ç–∞–ø —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–∏ –∫–Ω–∏–≥–∏
        BookAssemblyStage()
    ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã –∞–≥–µ–Ω—Ç—É
    agent.storage = storage
    agent.project = project
    agent.current_project = None
    agent.pipeline = pipeline
    
    # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥ generate_book
    async def generate_book(start_stage=1):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–Ω–∏–≥—É, –Ω–∞—á–∏–Ω–∞—è —Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —ç—Ç–∞–ø–∞"""
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞–π–ø–ª–∞–π–Ω
            success = await pipeline.run(None, llm, agent)
            if not success:
                logger.error("–ü–∞–π–ø–ª–∞–π–Ω –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π")
                return False
            return True
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–Ω–∏–≥–∏: {e}")
            return False
            
    agent.generate_book = generate_book
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
    command_handler = CommandHandler(agent)
    agent.command_handler = command_handler
    
    return agent, storage, project, pipeline, command_handler

async def main():
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞"""
    try:
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
        data_dir = os.path.join(os.path.dirname(__file__), "data")
        os.makedirs(data_dir, exist_ok=True)
        
        # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞ –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        agent, storage, project, pipeline, command_handler = create_agent()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω—ã
        await storage.setup()
        await project.setup()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω—ã
        agent.plugin_manager.register_plugin("storage", storage)
        agent.plugin_manager.register_plugin("project", project)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        web_thread = threading.Thread(target=run_web_server, daemon=True)
        web_thread.start()
        print("üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É http://localhost:8000")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≥–µ–Ω—Ç–∞
        await agent.start()
        
        # –í—ã–≤–æ–¥–∏–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        intro = f"""
{"="*50}
ü§ñ –ì–æ—Ä—å–∫–∏–π AI - –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–Ω–∏–≥
{"="*50}

üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–Ω–∏–≥!
üß† –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–æ–¥–µ–ª—å: {agent.llm.provider.name}/{agent.llm.provider.model}

üìù –ö–∞–∫ –Ω–∞—á–∞—Ç—å:
1. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∫–Ω–∏–≥—É: /new <–Ω–∞–∑–≤–∞–Ω–∏–µ>
2. –ò–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é: /open <id>
3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é: /start

üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:8000

‚ùì –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
{"="*50}
"""
        print(intro)
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥
        while True:
            try:
                user_input = input("üë§ ").strip()
                
                if user_input.lower() == "exit":
                    print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                    break
                    
                await command_handler.handle_command(user_input)
                    
            except KeyboardInterrupt:
                print("\nüëã –†–∞–±–æ—Ç–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                break
            
    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        raise
    finally:
        if 'agent' in locals():
            await agent.cleanup()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –†–∞–±–æ—Ç–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
