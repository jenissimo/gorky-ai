from .base import GorkyStage
import logging
import json

logger = logging.getLogger(__name__)

class UpdateProjectTitleStage(GorkyStage):
    """–≠—Ç–∞–ø –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
    
    def __init__(self):
        super().__init__()
        self.stage_name = "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è"
        
    async def process(self, prev_result, llm, agent):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º"""
        # –ü–æ–ª—É—á–∞–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
        title = await self.get_artefact(agent, "title")
        print(f"üîç –ü–æ–ª—É—á–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫: {title}")
        
        if not agent.current_project:
            logger.error("–ù–µ –≤—ã–±—Ä–∞–Ω —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç")
            return False
            
        print(f"üìö ID –ø—Ä–æ–µ–∫—Ç–∞: {agent.current_project.id}")
        
        if not title:
            logger.error("–ù–µ –Ω–∞–π–¥–µ–Ω —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫")
            return False
            
        # –ï—Å–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ, –∏–∑–≤–ª–µ–∫–∞–µ–º –µ–≥–æ
        if isinstance(title, str):
            try:
                title_data = json.loads(title)
                title = title_data.get('title', title)
            except json.JSONDecodeError:
                pass  # –û—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å, –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
        elif isinstance(title, dict):
            title = title.get('title', '')
            
        if not title:
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∑–∞–≥–æ–ª–æ–≤–æ–∫")
            return False
            
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç
        project = await agent.project.read(agent.current_project.id)
        if not project:
            logger.error("–ù–µ –Ω–∞–π–¥–µ–Ω —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç")
            return False
            
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏
        update_data = {
            "name": title,
            "description": project.description,  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
            "metadata": project.metadata  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        }
        
        await agent.project.update(agent.current_project.id, update_data)
        
        print(f"‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {title}")
        return True